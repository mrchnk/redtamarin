add_library(core
    AbcEnv.cpp
    AbcParser.cpp
    ActionBlockConstants.cpp
    ArrayClass.cpp
    ArrayObject.cpp
    atom.cpp
    AvmCore.cpp
    avm.cpp
    avmfeatures.cpp
    AvmLog.cpp
    avmplusDebugger.cpp
    avmplusHashtable.cpp
    avmplusList.cpp
    BigInteger.cpp
    BooleanClass.cpp
    BuiltinTraits.cpp
    ByteArrayGlue.cpp
    CdeclThunk.cpp
    ClassClass.cpp
    ClassClosure.cpp
    CodegenLIR.cpp
    Coder.cpp
    d2a.cpp
    DataIO.cpp
    DateClass.cpp
    DateObject.cpp
    DescribeTypeClass.cpp
    Deopt.cpp
    Deopt-CL.cpp
    Domain.cpp
    DomainEnv.cpp
    DomainMgr.cpp
    E4XNode.cpp
    ErrorClass.cpp
    ErrorConstants.cpp
    Exception.cpp
    exec.cpp
    exec-jit.cpp
    exec-osr.cpp
    exec-verifyall.cpp
    FloatClass.cpp
    Float4Class.cpp
    FrameState.cpp
    FunctionClass.cpp
    IntClass.cpp
    Interpreter.cpp
    InvokerCompiler.cpp
    JSONClass.cpp
    LirHelper.cpp
    MathClass.cpp
    MathUtils.cpp
    MethodClosure.cpp
    MethodEnv.cpp
    MethodInfo.cpp
    Multiname.cpp
    MultinameHashtable.cpp
    Namespace.cpp
    NamespaceClass.cpp
    NamespaceSet.cpp
    NativeFunction.cpp
    NumberClass.cpp
    ObjectClass.cpp
    peephole.cpp
    PoolObject.cpp
    PrintWriter.cpp
    PromiseChannelGlue.cpp
    ProxyGlue.cpp
    QCache.cpp
    RegExpClass.cpp
    RegExpObject.cpp
    Sampler.cpp
    ScopeChain.cpp
    ScriptBuffer.cpp
    ScriptObject.cpp
    StackTrace.cpp
    StringBuffer.cpp
    StringClass.cpp
    StringObject.cpp
    Toplevel.cpp
    Traits.cpp
    TypeDescriber.cpp
    UnicodeUtils.cpp
    VectorClass.cpp
    Verifier.cpp
    VTable.cpp
    WordcodeEmitter.cpp
    WordcodeTranslator.cpp
    wopcodes.cpp
    XMLClass.cpp
    XMLListClass.cpp
    XMLListObject.cpp
    XMLObject.cpp
    XMLParser16.cpp
    Date.cpp
    AbcData.cpp
    AvmPlusScriptableObject.cpp
    instr.cpp
    DictionaryGlue.cpp
    ObjectIO.cpp
    AvmSerializer.cpp
    ConcurrencyGlue.cpp
    Isolate.cpp
    avmplus.h
)

target_link_libraries(core AVMPI generated MMgc pcre lzma nanojit zlib)
target_include_directories(core PUBLIC ${CMAKE_CURRENT_SOURCE_DIR})